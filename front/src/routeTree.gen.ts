/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MoviesImport } from './routes/movies'
import { Route as IndexImport } from './routes/index'
import { Route as ReviewsCreateImport } from './routes/reviews.create'
import { Route as MoviesCreateImport } from './routes/movies_/create'
import { Route as ReviewsIdEditImport } from './routes/reviews.$id.edit'
import { Route as MoviesIdEditImport } from './routes/movies_/$id.edit'
import { Route as MoviesIdDetailsImport } from './routes/movies_/$id.details'

// Create/Update Routes

const MoviesRoute = MoviesImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReviewsCreateRoute = ReviewsCreateImport.update({
  id: '/reviews/create',
  path: '/reviews/create',
  getParentRoute: () => rootRoute,
} as any)

const MoviesCreateRoute = MoviesCreateImport.update({
  id: '/movies_/create',
  path: '/movies/create',
  getParentRoute: () => rootRoute,
} as any)

const ReviewsIdEditRoute = ReviewsIdEditImport.update({
  id: '/reviews/$id/edit',
  path: '/reviews/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

const MoviesIdEditRoute = MoviesIdEditImport.update({
  id: '/movies_/$id/edit',
  path: '/movies/$id/edit',
  getParentRoute: () => rootRoute,
} as any)

const MoviesIdDetailsRoute = MoviesIdDetailsImport.update({
  id: '/movies_/$id/details',
  path: '/movies/$id/details',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/movies': {
      id: '/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof MoviesImport
      parentRoute: typeof rootRoute
    }
    '/movies_/create': {
      id: '/movies_/create'
      path: '/movies/create'
      fullPath: '/movies/create'
      preLoaderRoute: typeof MoviesCreateImport
      parentRoute: typeof rootRoute
    }
    '/reviews/create': {
      id: '/reviews/create'
      path: '/reviews/create'
      fullPath: '/reviews/create'
      preLoaderRoute: typeof ReviewsCreateImport
      parentRoute: typeof rootRoute
    }
    '/movies_/$id/details': {
      id: '/movies_/$id/details'
      path: '/movies/$id/details'
      fullPath: '/movies/$id/details'
      preLoaderRoute: typeof MoviesIdDetailsImport
      parentRoute: typeof rootRoute
    }
    '/movies_/$id/edit': {
      id: '/movies_/$id/edit'
      path: '/movies/$id/edit'
      fullPath: '/movies/$id/edit'
      preLoaderRoute: typeof MoviesIdEditImport
      parentRoute: typeof rootRoute
    }
    '/reviews/$id/edit': {
      id: '/reviews/$id/edit'
      path: '/reviews/$id/edit'
      fullPath: '/reviews/$id/edit'
      preLoaderRoute: typeof ReviewsIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/movies': typeof MoviesRoute
  '/movies/create': typeof MoviesCreateRoute
  '/reviews/create': typeof ReviewsCreateRoute
  '/movies/$id/details': typeof MoviesIdDetailsRoute
  '/movies/$id/edit': typeof MoviesIdEditRoute
  '/reviews/$id/edit': typeof ReviewsIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/movies': typeof MoviesRoute
  '/movies/create': typeof MoviesCreateRoute
  '/reviews/create': typeof ReviewsCreateRoute
  '/movies/$id/details': typeof MoviesIdDetailsRoute
  '/movies/$id/edit': typeof MoviesIdEditRoute
  '/reviews/$id/edit': typeof ReviewsIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/movies': typeof MoviesRoute
  '/movies_/create': typeof MoviesCreateRoute
  '/reviews/create': typeof ReviewsCreateRoute
  '/movies_/$id/details': typeof MoviesIdDetailsRoute
  '/movies_/$id/edit': typeof MoviesIdEditRoute
  '/reviews/$id/edit': typeof ReviewsIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/movies'
    | '/movies/create'
    | '/reviews/create'
    | '/movies/$id/details'
    | '/movies/$id/edit'
    | '/reviews/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/movies'
    | '/movies/create'
    | '/reviews/create'
    | '/movies/$id/details'
    | '/movies/$id/edit'
    | '/reviews/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/movies'
    | '/movies_/create'
    | '/reviews/create'
    | '/movies_/$id/details'
    | '/movies_/$id/edit'
    | '/reviews/$id/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MoviesRoute: typeof MoviesRoute
  MoviesCreateRoute: typeof MoviesCreateRoute
  ReviewsCreateRoute: typeof ReviewsCreateRoute
  MoviesIdDetailsRoute: typeof MoviesIdDetailsRoute
  MoviesIdEditRoute: typeof MoviesIdEditRoute
  ReviewsIdEditRoute: typeof ReviewsIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MoviesRoute: MoviesRoute,
  MoviesCreateRoute: MoviesCreateRoute,
  ReviewsCreateRoute: ReviewsCreateRoute,
  MoviesIdDetailsRoute: MoviesIdDetailsRoute,
  MoviesIdEditRoute: MoviesIdEditRoute,
  ReviewsIdEditRoute: ReviewsIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/movies",
        "/movies_/create",
        "/reviews/create",
        "/movies_/$id/details",
        "/movies_/$id/edit",
        "/reviews/$id/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/movies": {
      "filePath": "movies.tsx"
    },
    "/movies_/create": {
      "filePath": "movies_/create.tsx"
    },
    "/reviews/create": {
      "filePath": "reviews.create.tsx"
    },
    "/movies_/$id/details": {
      "filePath": "movies_/$id.details.tsx"
    },
    "/movies_/$id/edit": {
      "filePath": "movies_/$id.edit.tsx"
    },
    "/reviews/$id/edit": {
      "filePath": "reviews.$id.edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
